# docker-compose.dev.yml
# Service Geliştirme ortamı

networks:
  sentiric-net:
    name: "${NETWORK_NAME:-sentiric-net}"
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}
  
# volumes:
  # [capability-tts]: Konuşma Sentezleme Yetenekleri (TTS Capabilities)
  # --------------------------------------------------  

services:
  # [capability-tts]: Konuşma Sentezleme Yetenekleri (TTS Capabilities)
  # -------------------------------------------------- 
  tts-edge-service:
    build: { context: ../sentiric-tts-edge-service }
    env_file: ["${ENV_FILE_PATH}"]
    volumes: 
      - "${CONFIG_REPO_PATH}:/sentiric-config:ro"
      - "${CERTIFICATES_REPO_PATH}:/sentiric-certificates:ro"
      - "${ASSETS_REPO_PATH}:/sentiric-assets:ro"
    ports: 
      - "14020:${TTS_EDGE_SERVICE_HTTP_PORT:-14020}"
      - "14021:${TTS_EDGE_SERVICE_GRPC_PORT:-14021}"
      - "14022:${TTS_EDGE_SERVICE_METRICS_PORT:-14022}"          
    networks:
      sentiric-net:
        ipv4_address: ${TTS_EDGE_SERVICE_IPV4_ADDRESS}       
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:14020/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s     